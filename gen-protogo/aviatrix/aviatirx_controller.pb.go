// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v3.21.12
// source: proto/aviatrix/aviatirx_controller.proto

package aviatrix

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Define the request message (empty for this example, as no input is specified)
type GetAviatrixControllersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAviatrixControllersRequest) Reset() {
	*x = GetAviatrixControllersRequest{}
	mi := &file_proto_aviatrix_aviatirx_controller_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAviatrixControllersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAviatrixControllersRequest) ProtoMessage() {}

func (x *GetAviatrixControllersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aviatrix_aviatirx_controller_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAviatrixControllersRequest.ProtoReflect.Descriptor instead.
func (*GetAviatrixControllersRequest) Descriptor() ([]byte, []int) {
	return file_proto_aviatrix_aviatirx_controller_proto_rawDescGZIP(), []int{0}
}

// Define the response message
type GetAviatrixControllersResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	AviatrixControllers []*AviatirxController  `protobuf:"bytes,1,rep,name=AviatrixControllers,proto3" json:"AviatrixControllers,omitempty"` // A list of AviatrixControllers
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetAviatrixControllersResponse) Reset() {
	*x = GetAviatrixControllersResponse{}
	mi := &file_proto_aviatrix_aviatirx_controller_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAviatrixControllersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAviatrixControllersResponse) ProtoMessage() {}

func (x *GetAviatrixControllersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aviatrix_aviatirx_controller_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAviatrixControllersResponse.ProtoReflect.Descriptor instead.
func (*GetAviatrixControllersResponse) Descriptor() ([]byte, []int) {
	return file_proto_aviatrix_aviatirx_controller_proto_rawDescGZIP(), []int{1}
}

func (x *GetAviatrixControllersResponse) GetAviatrixControllers() []*AviatirxController {
	if x != nil {
		return x.AviatrixControllers
	}
	return nil
}

// Define the aviatrixcontroller message
type AviatirxController struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Region        string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`                           // Region of the aviatrixcontroller
	VpcId         string                 `protobuf:"bytes,2,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`                // VPC ID
	InstanceId    string                 `protobuf:"bytes,3,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"` // Instance ID
	CloudType     string                 `protobuf:"bytes,4,opt,name=cloud_type,json=cloudType,proto3" json:"cloud_type,omitempty"`    // Cloud type
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AviatirxController) Reset() {
	*x = AviatirxController{}
	mi := &file_proto_aviatrix_aviatirx_controller_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AviatirxController) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AviatirxController) ProtoMessage() {}

func (x *AviatirxController) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aviatrix_aviatirx_controller_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AviatirxController.ProtoReflect.Descriptor instead.
func (*AviatirxController) Descriptor() ([]byte, []int) {
	return file_proto_aviatrix_aviatirx_controller_proto_rawDescGZIP(), []int{2}
}

func (x *AviatirxController) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AviatirxController) GetVpcId() string {
	if x != nil {
		return x.VpcId
	}
	return ""
}

func (x *AviatirxController) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *AviatirxController) GetCloudType() string {
	if x != nil {
		return x.CloudType
	}
	return ""
}

var File_proto_aviatrix_aviatirx_controller_proto protoreflect.FileDescriptor

var file_proto_aviatrix_aviatirx_controller_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x76, 0x69, 0x61, 0x74, 0x72, 0x69, 0x78,
	0x2f, 0x61, 0x76, 0x69, 0x61, 0x74, 0x69, 0x72, 0x78, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x61, 0x76, 0x69, 0x61,
	0x74, 0x72, 0x69, 0x78, 0x22, 0x1f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x76, 0x69, 0x61, 0x74,
	0x72, 0x69, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x70, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x69, 0x61,
	0x74, 0x72, 0x69, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x13, 0x41, 0x76, 0x69, 0x61, 0x74,
	0x72, 0x69, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x76, 0x69, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2e,
	0x41, 0x76, 0x69, 0x61, 0x74, 0x69, 0x72, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x52, 0x13, 0x41, 0x76, 0x69, 0x61, 0x74, 0x72, 0x69, 0x78, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x12, 0x41, 0x76, 0x69, 0x61,
	0x74, 0x69, 0x72, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x54, 0x79, 0x70, 0x65, 0x32, 0x88, 0x01,
	0x0a, 0x19, 0x41, 0x76, 0x69, 0x61, 0x74, 0x72, 0x69, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6b, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x41, 0x76, 0x69, 0x61, 0x74, 0x72, 0x69, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x76, 0x69, 0x61, 0x74, 0x72, 0x69, 0x78,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x69, 0x61, 0x74, 0x72, 0x69, 0x78, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x61, 0x76, 0x69, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x69,
	0x61, 0x74, 0x72, 0x69, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x21, 0x5a, 0x1f, 0x2e, 0x2f, 0x67, 0x65,
	0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x6f, 0x2f, 0x61, 0x76, 0x69, 0x61, 0x74, 0x72,
	0x69, 0x78, 0x3b, 0x61, 0x76, 0x69, 0x61, 0x74, 0x72, 0x69, 0x78, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_aviatrix_aviatirx_controller_proto_rawDescOnce sync.Once
	file_proto_aviatrix_aviatirx_controller_proto_rawDescData = file_proto_aviatrix_aviatirx_controller_proto_rawDesc
)

func file_proto_aviatrix_aviatirx_controller_proto_rawDescGZIP() []byte {
	file_proto_aviatrix_aviatirx_controller_proto_rawDescOnce.Do(func() {
		file_proto_aviatrix_aviatirx_controller_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_aviatrix_aviatirx_controller_proto_rawDescData)
	})
	return file_proto_aviatrix_aviatirx_controller_proto_rawDescData
}

var file_proto_aviatrix_aviatirx_controller_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_aviatrix_aviatirx_controller_proto_goTypes = []any{
	(*GetAviatrixControllersRequest)(nil),  // 0: aviatrix.GetAviatrixControllersRequest
	(*GetAviatrixControllersResponse)(nil), // 1: aviatrix.GetAviatrixControllersResponse
	(*AviatirxController)(nil),             // 2: aviatrix.AviatirxController
}
var file_proto_aviatrix_aviatirx_controller_proto_depIdxs = []int32{
	2, // 0: aviatrix.GetAviatrixControllersResponse.AviatrixControllers:type_name -> aviatrix.AviatirxController
	0, // 1: aviatrix.AviatrixControllerservice.GetAviatrixControllers:input_type -> aviatrix.GetAviatrixControllersRequest
	1, // 2: aviatrix.AviatrixControllerservice.GetAviatrixControllers:output_type -> aviatrix.GetAviatrixControllersResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_aviatrix_aviatirx_controller_proto_init() }
func file_proto_aviatrix_aviatirx_controller_proto_init() {
	if File_proto_aviatrix_aviatirx_controller_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_aviatrix_aviatirx_controller_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_aviatrix_aviatirx_controller_proto_goTypes,
		DependencyIndexes: file_proto_aviatrix_aviatirx_controller_proto_depIdxs,
		MessageInfos:      file_proto_aviatrix_aviatirx_controller_proto_msgTypes,
	}.Build()
	File_proto_aviatrix_aviatirx_controller_proto = out.File
	file_proto_aviatrix_aviatirx_controller_proto_rawDesc = nil
	file_proto_aviatrix_aviatirx_controller_proto_goTypes = nil
	file_proto_aviatrix_aviatirx_controller_proto_depIdxs = nil
}
